AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Transform:
  - UpdateDeploymentTransform

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'
  
  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  UsagePlanThrottle:
    Type: Double
    Description: 'throttle for new AWS usagePlan'

  UsagePlanBurstLimit:
    Type: Integer
    Description: 'throttle burstLimit for new AWS usagePlan'

  UsagePlanApiId:
    Type: String
    Description: 'ApiId for new AWS usagePlan'

  UsagePlanKeyType:
    Type: String
    Description: 'keyType for new AWS usagePlan'

  UsagePlanStage:
    Type: String
    Description: 'stage for new AWS usagePlan'

  PaAggregationsTableName:
    Type: String
    Description: 'Name of dynamodb table containing PaAggregations information'

  AggregatesTableName:
    Type: String
    Description: 'Name of dynamodb table containing Aggregates information'

  ApiKeyTableName:
    Type: String
    Description: 'Name of dynamodb table containing VirtualKey information'

  PaAggregationsTableArn:
    Type: String
    Description: 'Arn of dynamodb table containing PaAggregations information'

  AggregatesTableArn:
    Type: String
    Description: 'Arn of dynamodb table containing Aggregates information'

  ApiKeyTableArn:
    Type: String
    Description: 'Arn of dynamodb table containing VirtualKey information'

Resources:

  # PN-National-Registry microservice
  ApikeyManagerMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        HealthCheckPath: /actuator/health
        HealthCheckTimeout: 15
        AutoscalingStrategy: REST-API
        AutoscalingThreshold: 70
        MicroServiceUniqueName: !Sub '${ProjectName}-ApikeyManager'
        CpuValue: 1024
        MemoryAmount: 2GB
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGION=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'PN_APIKEY_MANAGER_DYNAMODB_TABLE_NAME_API_KEY=${ApiKeyTableName}'
        ContainerEnvEntry3: !Sub 'PN_APIKEY_MANAGER_DYNAMODB_TABLE_NAME_AGGREGATES=${AggregatesTableName}'
        ContainerEnvEntry4: !Sub 'PN_APIKEY_MANAGER_DYNAMODB_TABLE_NAME_PA_AGGREGATIONS=${PaAggregationsTableName}'
        ContainerEnvEntry6: !Sub 'PN_APIKEY_MANAGER_AWS_USAGEPLAN_THROTTLE=${UsagePlanThrottle}'
        ContainerEnvEntry7: !Sub 'PN_APIKEY_MANAGER_AWS_USAGEPLAN_KEY_TYPE=${UsagePlanKeyType}'
        ContainerEnvEntry8: !Sub 'PN_APIKEY_MANAGER_AWS_USAGEPLAN_API_ID=${UsagePlanApiId}'
        ContainerEnvEntry9: !Sub 'PN_APIKEY_MANAGER_AWS_USAGEPLAN_STAGE=${UsagePlanApiStage}'
        MappedPaths: '/apikey-manager/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber

  ApikeyManagerMicroserviceTaskPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ProjectName}-ApikeyManager-CustomTaskPolicy'
      Roles:
        - !GetAtt ApikeyManagerMicroservice.Outputs.TaskRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ExecuteTransaction
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:TransactGetItems
              - dynamodb:TransactWriteItems
              - dynamodb:UpdateItem
              - dynamodb:Scan
            Resource:
              - !Ref AggregatesTableArn
              - !Ref PaAggregationsTableArn
              - !Ref ApiKeyTableArn

